schema danswer_chunk {
    document danswer_chunk {
        # Not to be confused with the UUID generated for this chunk which is called documentid by default
        field document_id type string {
            indexing: summary | attribute
        }
        field chunk_id type int {
            indexing: summary | attribute
        }
        field blurb type string {
            indexing: summary | attribute
        }
        # Can separate out title in the future and give heavier bm-25 weighting
        # Need to consider that not every doc has a separable title (ie. slack message)
        # Set summary options to enable bolding
        field content type string {
            indexing: summary | index
            match {
                gram
                gram-size: 3
            }
            index: enable-bm25
        }
        # duplication of `content` is far from ideal, but is needed for 
        # non-gram based highlighting for now. If the capability to re-use a 
        # single field to do both is added, `content_summary` should be removed
        field content_summary type string {
            indexing: summary | index
            summary: dynamic
        }
        # https://docs.vespa.ai/en/attributes.html potential enum store for speed, but probably not worth it
        field source_type type string {
            indexing: summary | attribute
        }
        # Can also index links https://docs.vespa.ai/en/reference/schema-reference.html#attribute
        # URL type matching
        field source_links type string {
            indexing: summary | attribute
        }
        field semantic_identifier type string {
            indexing: summary | attribute
        }
        field section_continuation type bool {
            indexing: summary | attribute
        }
        # Technically this one should be int, but can't change without causing breaks to existing index
        field boost type float {
            indexing: summary | attribute
        }
        field metadata type string {
            indexing: summary | attribute
        }
        field embeddings type tensor<float>(t{},x[384]) {
            indexing: attribute
            attribute {
                distance-metric: angular
            }
        }
        field access_control_list type weightedset<string> {
            indexing: summary | attribute
            attribute: fast-search
        }
        field document_sets type weightedset<string> {
            indexing: summary | attribute
            attribute: fast-search
        }
    }

    fieldset default {
        fields: content
    }

    rank-profile keyword_search inherits default {
        first-phase {
            expression: bm25(content) * (2 / (1 + exp(-attribute(boost) / 3)))
        }
    }

    rank-profile semantic_search inherits default {
        inputs {
            query(query_embedding) tensor<float>(x[384])
        }
        first-phase {
            # Cannot do boost with the chosen embedding model because of high default similarity
            expression: closeness(field, embeddings)
        }
        match-features: closest(embeddings)
    }

    rank-profile hybrid_search inherits default {
        inputs {
            query(query_embedding) tensor<float>(x[384])
        }
        first-phase {
            expression: bm25(content) * (2 / (1 + exp(-attribute(boost) / 3)))
        }
        second-phase {
            # Cannot do boost with the chosen embedding model because of high default similarity
            expression: closeness(field, embeddings)
        }
        match-features: closest(embeddings)
    }
}
